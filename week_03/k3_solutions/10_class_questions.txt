Classes and OOP
What is a class?
Code template to create objects.


How do you define a new class called MyFirstClass?
class MyFirstClass

How do you create an object of the class MyFirstClass?
my_class_object = MyFirstClass()

What is instantiation?
An object is an inctance of the class.

What are attributes?
Attributes set functionalities, they act as containers for data and functions (methods) related to these attributes.

What does it mean when an object is embedded?
That it is an attribute of another object.

What is the difference between copy.copy and copy.deepcopy? What do they each do?
copy.copy duplicates the class but not the embedded obejcts, essentially being only one level deep. It will not create copies of the child objects themselves.
A deep copy makes the copying process recursive. Copying an object this way walks the whole object tree to create a fully independent clone of the original object and all of its children.

What is the difference between a pure function and a modifier?
Pure function does not modify any of the objects passed to it as arguments and it has no effect other than returning a value.
Modifier - the function modifies the objects it gets as parameters.

What is object-oriented programming?
OOP is a programming model organized around objects rather than actions, and data rather than logic.
The 3 main traits: Encapsulation (binding together the code and data manipulating it; essentially an object is created); Polymorphism (one interface can access a general class of actions); Inheritance (one object can acquire the properties of another object)

Methods (page 161)
What is a method?
Method is a function that takes a class instance as its first parameter.

How is a method different than a function?
Methods are called by object variable. Functions are defined outisde of classes.

What is invocation?
Statement that calls a method.

What is the __init__ method and what is it used for?
Known as constructor, it is called when an object is created from the class to initialize the attrbutes of a class.

Give an example __init__ method for a Car class with attributes: make, model and `year.
class Car():
    def __init__(self, make, model, year):
        self.make = make
        self.model = model
        self.year = year


How do __init__ methods handle variable arguments?

What is the __str__ method used for?
__str__ is the built-in function in python, used for string representation of object.

How do you use a __str__ method?

What is operator overloading?
E.g, the + operator will, perform arithmetic addition on two numbers, merge two lists and concatenate two strings - allowing the same operator to have different meaning according to the context is called operator overloading.


What is an example of operator overloading? ^^

TYPE-BASED DISPATCH?
What is polymorphism?
Polymorphic functions - work with several types (lists, tuples, dicts)

Why is polymorphism beneficial?
Facilitates reuse.
